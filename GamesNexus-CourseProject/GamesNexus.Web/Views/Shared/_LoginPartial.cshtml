@using Microsoft.AspNetCore.Identity
@using GamesNexus.Data.Models
@using GamesNexus.Services.Data.Interfaces

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService

@{
    string username = await UserService.GetUsernameByEmailAsync(User.Identity?.Name!);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="EditProfile">Hello, @username </a>
    </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Publisher" asp-action="Become">Become Publisher </a>
        </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
    </li>
}
</ul>
