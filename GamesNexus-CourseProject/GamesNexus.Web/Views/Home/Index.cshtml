@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

@if (Model.GameIndexViewModel.Any())
{

    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <h2>Games</h2>
                <div class="row justify-content-between">
                    @foreach (var game in Model.GameIndexViewModel)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card" style="width: 100%;">
                                <img class="card-img-top game-image" src="@game.ImageUrl" alt="Game Image">
                                <div class="card-body" style="padding: 8px;">
                                    <h5 class="card-title">@game.Title</h5>
                                    <p class="card-text"> @string.Join(", ", game.Genres)</p>
                                    <a href="@Url.Action("Details", "Game", new { id = game.Id })" class="btn btn-primary">Details</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@if (Model.NewsIndexViewModels.Any())
{
    <div class="container">
        <div class="row justify-content-between">
            @foreach (var newsItem in Model.NewsIndexViewModels)
            {
                <div class="col-md-4 mb-2">
                    <div class="card" style="width: 100%;">
                        <div class="card-body">
                            <h5 class="card-title">@newsItem.Title</h5>
                            <p class="card-text">@newsItem.PublishedOn</p>
                            <a href="@Url.Action("Details", "News", new { id = newsItem.Id })" class="btn btn-primary">Read More</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

<div class="form-group">
    <label for="ImageUrlsInput">Image URLs:</label>
    <input class="form-control" id="ImageUrlsInput" name="ImageUrlsInput"/>
    <div id="additionalImageUrls">
        <!-- Dynamically generated input fields will go here -->
    </div>
    <button type="button" id="addImageUrlBtn" class="btn btn-info mt-2">Add Another Image</button>

</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const addImageUrlBtn = document.getElementById("addImageUrlBtn");
        const additionalImageUrlsContainer = document.getElementById("additionalImageUrls");

        let imageUrlCounter = 1;

        addImageUrlBtn.addEventListener("click", function () {
            const inputContainer = document.createElement("div");
            inputContainer.className = "input-group mt-2"; // Apply Bootstrap input group styling

            const input = document.createElement("input");
            input.type = "text";
            input.className = "form-control"; // Apply Bootstrap form control styling
            input.name = `AdditionalImageUrls[${imageUrlCounter}]`;
            input.placeholder = "Enter image URL";
            inputContainer.appendChild(input);

            const deleteButton = document.createElement("button");
            deleteButton.type = "button";
            deleteButton.className = "btn btn-danger"; // Apply Bootstrap danger button styling
            deleteButton.textContent = "Remove"; // Add a "Remove" button for each input
            deleteButton.addEventListener("click", function () {
                inputContainer.remove(); // Remove the input field when "Remove" is clicked
            });

            // Add margin to the button for spacing
            deleteButton.style.marginLeft = "5px"; // Adjust the margin as needed

            inputContainer.appendChild(deleteButton);

            additionalImageUrlsContainer.appendChild(inputContainer);

            imageUrlCounter++;
        });
        const form = document.getElementById("yourFormId"); // Replace with your form ID
        form.addEventListener("submit", function () {
            const inputFields = document.querySelectorAll("input[name^='AdditionalImageUrls']");
            for (const input of inputFields) {
                if (input.value.trim() === "") {
                    input.parentNode.removeChild(input);
                }
            }
        });
    });
</script>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}