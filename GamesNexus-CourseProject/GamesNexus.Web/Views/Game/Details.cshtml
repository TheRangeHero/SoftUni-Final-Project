@model GameDetailViewModel

<body>

    <h1 class="text-center">@Model.Title</h1>

    <div class="container mt-4">
        <!-- Images, Video and Description -->
        <div class="row">
            <!-- Image and Video Carousel -->
            <div class="col-md-7">
                <div id="carouselExample" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="@Model.Image1" class="d-block w-100" alt="Game Image 1">
                        </div>
                        @if (!string.IsNullOrWhiteSpace(Model.Image2))
                        {
                            <div class="carousel-item">
                                <img src="@Model.Image2" class="d-block w-100" alt="Game Image 2">
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Image3))
                        {
                            <div class="carousel-item">
                                <img src="@Model.Image3" class="d-block w-100" alt="Game Image 3">
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Video))
                        {
                            <div class="carousel-item">
                                <div class="embed-responsive embed-responsive-16by9">
                                    <iframe class="embed-responsive-item" src="@Model.Video" allowfullscreen></iframe>
                                </div>
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>

            <!-- Description, Release Info, Publisher/Developer Info, Genres, and Categories -->
            <div class="col-md-5">
                <div>
                    <h4>Description</h4>
                    <p>@Model.Description</p>
                </div>

                <div class="mt-3">
                    <h4>Release Date and Price</h4>
                    <p>Release Date: @Model.ReleaseDate</p>
                    <p>Price: $@Model.Price</p>
                </div>

                <div class="mt-3">
                    <h4>Publisher and Developer</h4>
                    <p>Publisher: @Model.Publisher</p>
                    <p>Developer: @Model.Developer</p>
                </div>

                <div class="mt-3">
                    <h4>Genres and Categories</h4>
                    <p>Genres: @string.Join(", ", Model.Genres)</p>
                    <p>Categories: @string.Join(", ", Model.Categories)</p>
                </div>
            </div>
        </div>

        <!-- System Requirements -->
        <div class="row mt-5">
            <div class="col">
                <h2>System Requirements</h2>
                <p>OS: @Model.OS</p>
                <p>CPU: @Model.CPU</p>
                <p>RAM: @Model.RAM</p>
                <p>GPU: @Model.GPU</p>
                <p>Storage: @Model.Storage</p>
                <p>Additional Notes: @Model.AdditionalNotes</p>
            </div>
        </div>

        <!-- Reviews -->
        <div class="row mt-5">
            <div class="col">
                <h2>Reviews</h2>
                <ul>
                    @foreach (var review in Model.Reviews)
                    {
                        <li class="mb-3">
                            <strong>Rating:</strong> @review.Rating <br>
                            <strong>Opinion:</strong> @review.Comment <br>
                            <strong>Posted On:</strong> @review.PostedOn <br>
                            <strong>Posted By:</strong> @review.PostedBy
                        </li>
                    }
                </ul>
            </div>
        </div>

        <!-- Post Your Review -->
        <div class="row mt-5">
            <div class="col">
                <h2>Post Your Review</h2>
                <form id="postReviewForm" class="mt-3">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="GameId" value="@Model.Id" />
                    <textarea name="Review" placeholder="Your review..." rows="5" cols="50" required class="form-control mb-3"></textarea>
                    <label for="Rating" class="form-label">Rating:</label>
                    <select name="Rating" required class="form-select mb-3">
                        @foreach (var ratingOption in Model.PostReview.RatingOptions)
                        {
                            <option value="@ratingOption.Key">@ratingOption.Value</option>
                        }
                    </select>
                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </form>
                <div id="postReviewResponse" class="mt-3"></div>  <!-- For displaying messages after submitting the review -->


    <script>
        $(document).ready(function () {
            $("#postReviewForm").on("submit", function (event) {
                event.preventDefault();

                $.ajax({
                    url: "@Url.Action("PostReview", "Game")", // Use the Url.Action method to generate the URL
                    method: "POST",
                    headers: { 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            $("#postReviewResponse").html('<span class="text-success">' + response.message + '</span>');
                            $("#postReviewForm")[0].reset();
                            location.reload();
                        } else {
                            var errorMessage = response.message;
                            if (response.errors) {
                                errorMessage += "<ul>";
                                for (var key in response.errors) {
                                    if (response.errors.hasOwnProperty(key)) {
                                        errorMessage += "<li>" + response.errors[key] + "</li>";
                                    }
                                }
                                errorMessage += "</ul>";
                            }
                            $("#postReviewResponse").html('<span class="text-danger">' + errorMessage + '</span>');
                        }
                    },
                    error: function () {
                        $("#postReviewResponse").html('<span class="text-danger">An error occurred. Please try again later.</span>');
                    }
                });
            });
        });
    </script>
</body>





@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

